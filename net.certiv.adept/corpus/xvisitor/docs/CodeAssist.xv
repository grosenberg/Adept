xvisitor grammar CodeAssist;

options {
	parserClass = AntlrDT4Parser;
}

@header {

	package net.certiv.antlr.dt.core.parser.gen;
	import net.certiv.antlr.dt.core.parser.AntlrDTSourceParser;
	import org.antlr.v4.runtime.Token;
}




@members {
	private AntlrDTSourceParser helper;
	public void setHelper(AntlrDTSourceParser helper) {
		this.helper = helper;
	}
}

codeAssist
	: tokens
	| imports
	| labels
	| parserRuleSpec
	| parserRules
	| parserTerminals
	| lexerRuleSpec
	| lexerRules
	;

tokens
	: //tokensSpec//id
		{ helper.addCodeAssistElement($TOKEN_REF); }
	;

imports
	: //delegateGrammars//id {
			Token token = $RULE_REF != null ? $RULE_REF : $TOKEN_REF;
			helper.addCodeAssistElement(token);
		}
	;

labels
	: //labeledElement//id {
			Token token = $RULE_REF != null ? $RULE_REF : $TOKEN_REF;
			helper.addCodeAssistElement(token);
		}
	;

parserRuleSpec
	: //parserRuleSpec
		{ helper.addCodeAssistElement($RULE_REF); }
	;

parserRules
	: //ruleBlock//atom/ruleref
		{ helper.addCodeAssistElement($RULE_REF); }
	;

parserTerminals
	: //ruleBlock//atom/terminal
		{ helper.addCodeAssistElement($TOKEN_REF); }
	;

lexerRuleSpec
	: //lexerRuleSpec
		{ helper.addCodeAssistElement($TOKEN_REF); }
	;

lexerRules
	: //lexerRuleBlock//terminal
		{ helper.addCodeAssistElement($TOKEN_REF); }
	;

